#pragma once

// 에러 코드는 1 ~ 200까지 사용한다.
enum class SERVER_ERROR : short
{
	NONE = 0,

	SERVER_SOCKET_CREATE_FAIL = 11,
	SERVER_SOCKET_SO_REUSEADDR_FAIL = 12,
	SERVER_SOCKET_BIND_FAIL = 14,
	SERVER_SOCKET_LISTEN_FAIL = 15,

	SEND_CLOSE_SOCKET = 21,
	SEND_SIZE_ZERO = 22,
	CLIENT_SEND_BUFFER_FULL = 23,
	CLIENT_FLUSH_SEND_BUFF_REMOTE_CLOSE = 24,
	ACCEPT_API_ERROR = 26,
	ACCEPT_MAX_SESSION_COUNT = 27,
	RECV_API_ERROR = 32,
	RECV_BUFFER_OVERFLOW = 32,
	RECV_REMOTE_CLOSE = 33,
	RECV_PROCESS_NOT_CONNECTED = 34,
	RECV_CLIENT_MAX_PACKET = 35,
};

enum class SOCKET_CLOSE : short
{
	SESSION_POOL_EMPTY = 1,
	SELECT_ERROR = 2,
	SOCKET_RECV_ERROR = 3,
	SOCKET_RECV_BUFFER_PROCESS_ERROR = 4,
	SOCKET_SEND_ERROR = 5,
	FORCING_CLOSE = 6,
};


const int MAX_NET_ERROR_STRING_COUNT = 64;
struct NetError
{
	NetError(SERVER_ERROR code)
	{
		Error = code;
	}

	SERVER_ERROR Error = SERVER_ERROR::NONE;
	wchar_t Msg[MAX_NET_ERROR_STRING_COUNT] = { 0, };
	int Value = 0;
};
